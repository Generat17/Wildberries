/*

10. Дана последовательность температурных колебаний: -25.4, -27.0 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
Объединить данные значения в группы с шагом в 10 градусов. Последовательность в подмножноствах не важна.

Пример: -20:{-25.0, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20: {24.5}, etc.

*/

package main

import (
	"fmt"
)

// Функция, которая принимает массив температурных колебаний и возвращает карту групп с ключами, округленными до ближайшего десятка
func groupByRange(temps []float64) map[int][]float64 {
	groups := make(map[int][]float64) // Создаем пустую карту для хранения групп
	for _, t := range temps {         // Для каждого значения температуры в массиве
		key := int(t/10) * 10                // Округляем его до ближайшего десятка и используем его как ключ
		groups[key] = append(groups[key], t) // Добавляем его в соответствующую группу в карте
	}
	return groups // Возвращаем карту групп
}

func main() {
	// Создаем массив температурных колебаний для обработки
	temps := []float64{-25.4, -27.0, 13.0, 19.0, 15.5, 24.5, -21.0, 32.5}

	// Вызываем функцию groupByRange и получаем карту групп
	groups := groupByRange(temps)

	// Выводим карту групп в формате ключ: {значения}
	fmt.Println("Группы:")
	for k, v := range groups {
		fmt.Printf("%v: %v\n", k, v)
	}
}
