/*

20. –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Å–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫–µ.
–ü—Ä–∏–º–µ—Ä: ¬´snow dog sun ‚Äî sun dog snow¬ª.

*/

package main

import (
	"fmt"
	"strings"
)

// ReverseWords - —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç —Å–ª–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫–µ
func ReverseWords(s string) string {
	// –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å—Ä–µ–∑ —Å—Ç—Ä–æ–∫ –ø–æ –ø—Ä–æ–±–µ–ª–∞–º
	words := strings.Split(s, " ")

	// –û–±–º–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ä–µ–∑–∞ —Å –Ω–∞—á–∞–ª–∞ –∏ —Å –∫–æ–Ω—Ü–∞
	for i, j := 0, len(words)-1; i < j; i, j = i+1, j-1 {
		words[i], words[j] = words[j], words[i]
	}

	// –°–æ–µ–¥–∏–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ä–µ–∑–∞ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –ø—Ä–æ–±–µ–ª–∞–º–∏
	return strings.Join(words, " ")
}

func main() {
	// –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö
	fmt.Println(ReverseWords("snow dog sun")) // sun dog snow
	fmt.Println(ReverseWords("Hello World"))  // World Hello
	fmt.Println(ReverseWords("–ü—Ä–∏–≤–µ—Ç –ú–∏—Ä"))   // –ú–∏—Ä –ü—Ä–∏–≤–µ—Ç
	fmt.Println(ReverseWords("üëã üåé üê∂"))        // üê∂üåéüëã
}
