/*

24. Разработать программу нахождения расстояния между двумя точками,
которые представлены в виде структуры Point с инкапсулированными параметрами x,y и конструктором.

*/

package main

// Импортируем пакет math
import (
	"fmt"
	"math"
)

// Point структура, которая представляет точку на плоскости с инкапсулированными параметрами x и y
type Point struct {
	x float64 // координата x
	y float64 // координата y
}

// NewPoint конструктор для создания экземпляра Point с заданными координатами
func NewPoint(x float64, y float64) *Point {
	return &Point{x: x, y: y}
}

// Distance метод, который принимает другой экземпляр Point и возвращает расстояние между ним и текущей точкой
func (p *Point) Distance(q *Point) float64 {
	// Вычисляем разность координат по оси x и по оси y
	dx := p.x - q.x
	dy := p.y - q.y

	// Вычисляем квадрат расстояния по теореме Пифагора
	sq := dx*dx + dy*dy

	// Вычисляем квадратный корень из квадрата расстояния с помощью функции Sqrt из пакета math
	dist := math.Sqrt(sq)

	// Возвращаем расстояние
	return dist
}

func main() {
	// Создаем две точки с помощью конструктора
	p1 := NewPoint(1.0, 2.0)
	p2 := NewPoint(4.0, 6.0)

	// Выводим координаты точек на экран
	fmt.Println("p1 =", p1)
	fmt.Println("p2 =", p2)

	// Вычисляем расстояние между точками с помощью метода Distance
	dist := p1.Distance(p2)

	// Выводим расстояние на экран
	fmt.Println("Distance =", dist)
}
