/*
15.	–ö –∫–∞–∫–∏–º –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è–º –º–æ–∂–µ—Ç –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–π —Ñ—Ä–∞–≥–º–µ–Ω—Ç –∫–æ–¥–∞,
–∏ –∫–∞–∫ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å? –ü—Ä–∏–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏.

var justString string

func someFunc() {
  v := createHugeString(1 << 10)
  justString = v[:100]
}

func main() {
  someFunc()
}

----- –û–¢–í–ï–¢ -----

1)	–õ—É—á—à–µ —Å–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é justString –≤ main –∏ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –µ–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
	- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –∫—É—á–µ, –∞ –ª–æ–∫–∞–ª—å–Ω—ã–µ –≤ —Å—Ç—ç–∫–µ
	- –†–∞–±–æ—Ç–∞ –∫–æ–¥–∞ –±–æ–ª–µ–µ –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–∞—è

2)	–î–æ–ø—É—Å—Ç–∏–º —É –Ω–∞—Å —Å—Ç—Ä–æ–∫–∞ –≤ —é–Ω–∏–∫–æ–¥–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä str := "üëãüåéüê∂"
	justString = str[:4], justString –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ "üëã"
	–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —ç—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–ø–µ—Ä–∞—Ü–∏—è –≤–∑—è—Ç–∏—è —Å—Ä–µ–∑–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç n –±–∞–π—Ç, –∞ –Ω–µ n —Å–∏–º–≤–æ–ª–æ–≤
	–ê –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª unicode –º–æ–∂–µ—Ç –≤–µ—Å–∏—Ç—å –¥–æ 4 –±–∞–π—Ç–æ–≤
	–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —é–Ω–∏–∫–æ–¥–æ–º –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ª–∞–π—Å rune

3)	–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø–∞–º—è—Ç—å—é –∏ gc —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é copy

*/

package main

import "fmt"

var justString string

func someFunc() {
	v1 := []rune(createHugeString(1 << 10))
	v2 := make([]rune, 100)

	// –∫–æ–ø–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏
	copy(v2, v1[:100])

	justString = string(v2)

	fmt.Println(justString)
}

func createHugeString(length int) string {
	s := make([]rune, length)

	for i := range s {
		s[i] = 'üëã'
	}

	//fmt.Println(string(s))

	return string(s)
}

func main() {
	someFunc()
}
